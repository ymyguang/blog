<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Java - 标签 - YmyGuang</title>
        <link>https://blog-n3y5j0t56.vercel.app/tags/java/</link>
        <description>Java - 标签 - YmyGuang</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>2096304869@qq.com (ymyguang)</managingEditor>
            <webMaster>2096304869@qq.com (ymyguang)</webMaster><lastBuildDate>Tue, 20 Jul 2021 16:15:52 &#43;0800</lastBuildDate><atom:link href="https://blog-n3y5j0t56.vercel.app/tags/java/" rel="self" type="application/rss+xml" /><item>
    <title>Java注解</title>
    <link>https://blog-n3y5j0t56.vercel.app/posts/java/java%E6%B3%A8%E8%A7%A3%E5%92%8C%E5%8F%8D%E5%B0%84-java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
    <pubDate>Tue, 20 Jul 2021 16:15:52 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog-n3y5j0t56.vercel.app/posts/java/java%E6%B3%A8%E8%A7%A3%E5%92%8C%E5%8F%8D%E5%B0%84-java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
    <description><![CDATA[Java注解和反射 [toc] 注解Annotation Information for the compiler — Annotations can be used by the compiler to detect errors or suppress warnings. Compile-time and deployment-time processing — Software tools can process annotation information to generate code, XML files, and so forth. Runtime processing — Some annotations are available to be examined at]]></description>
</item><item>
    <title>Spring笔记</title>
    <link>https://blog-n3y5j0t56.vercel.app/posts/java/spring%E7%AC%94%E8%AE%B0/</link>
    <pubDate>Thu, 15 Jul 2021 15:58:22 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog-n3y5j0t56.vercel.app/posts/java/spring%E7%AC%94%E8%AE%B0/</guid>
    <description><![CDATA[Spring 笔记 一些概念 控制反转（incersion of control) &amp;&amp; 依赖注入（dependency injection) 解释：依赖注入是控制反转的附属品。正是由于控制反转才能够产生]]></description>
</item><item>
    <title>Maven入门</title>
    <link>https://blog-n3y5j0t56.vercel.app/posts/java/maven%E5%85%A5%E9%97%A8/</link>
    <pubDate>Wed, 14 Jul 2021 16:05:11 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog-n3y5j0t56.vercel.app/posts/java/maven%E5%85%A5%E9%97%A8/</guid>
    <description><![CDATA[Maven 笔记 一、Maven是什么？ ​ Maven 是Java中自动构建代码和解决依赖的工具。主要有POM文件提供配置参数；有了Maven之后，可以快速的创建，]]></description>
</item><item>
    <title>抽象类和接口的区别</title>
    <link>https://blog-n3y5j0t56.vercel.app/posts/coding/%E6%8A%BD%E8%B1%A1%E7%B1%BB%E5%92%8C%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
    <pubDate>Wed, 24 Feb 2021 15:05:22 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog-n3y5j0t56.vercel.app/posts/coding/%E6%8A%BD%E8%B1%A1%E7%B1%BB%E5%92%8C%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
    <description><![CDATA[抽象类和接口的区别 抽象类是一个类，因此具有类的性质，即可以含有构造方法 接口是抽象方法的集合 花括号内容： 接口中的方法不允许实例化； 接口中除了s]]></description>
</item><item>
    <title>IDEA_Java项目的运行Demo</title>
    <link>https://blog-n3y5j0t56.vercel.app/posts/ed/ip2region%E8%AE%B0%E5%BD%95/</link>
    <pubDate>Mon, 29 Jun 2020 15:05:22 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog-n3y5j0t56.vercel.app/posts/ed/ip2region%E8%AE%B0%E5%BD%95/</guid>
    <description><![CDATA[IDEA_Java项目的运行Demo 起初是锋锦哥，让我负责流量大师的IP源地址查询任务，自己打算对开源项目进行魔改，于是乎找到了Ip2reg]]></description>
</item><item>
    <title>tomcat乱码</title>
    <link>https://blog-n3y5j0t56.vercel.app/posts/md/tomcat/</link>
    <pubDate>Mon, 29 Jun 2020 15:05:22 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog-n3y5j0t56.vercel.app/posts/md/tomcat/</guid>
    <description><![CDATA[记一次tomcat乱码的解决方法 起初在是使用tomcat的时候，一脸懵逼不是到是什么。实际上tomcat是由Java编写的服务器软件。 之前在]]></description>
</item><item>
    <title>单链表</title>
    <link>https://blog-n3y5j0t56.vercel.app/posts/ed/%E5%8D%95%E9%93%BE%E8%A1%A8-java%E7%AF%87/</link>
    <pubDate>Mon, 29 Jun 2020 15:05:22 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog-n3y5j0t56.vercel.app/posts/ed/%E5%8D%95%E9%93%BE%E8%A1%A8-java%E7%AF%87/</guid>
    <description><![CDATA[单链表（Java代码实现） 前言 在计算机学习体系中 ，数据结构的地位不可或缺，甚至可以是派头老大哥。 那么什么是数据结构？说人话就是通过代码构建的]]></description>
</item><item>
    <title>面向接口实例</title>
    <link>https://blog-n3y5j0t56.vercel.app/posts/md/%E9%97%AE%E9%A2%98%E5%A4%8D%E7%9B%98/</link>
    <pubDate>Mon, 29 Jun 2020 15:05:22 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog-n3y5j0t56.vercel.app/posts/md/%E9%97%AE%E9%A2%98%E5%A4%8D%E7%9B%98/</guid>
    <description><![CDATA[问题产生 在看源码的时候，看到了这一句话: 1 List&lt;Person&gt; personList = new ArrayList&lt;&gt;(); 第一眼看上去并没有太在意，但是再看到这句话的时候，不禁产生了疑问； 通常在定义对象的时候，]]></description>
</item></channel>
</rss>
