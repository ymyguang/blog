<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>computer - 标签 - YmyGuang</title>
        <link>https://blog-n3y5j0t56.vercel.app/tags/computer/</link>
        <description>computer - 标签 - YmyGuang</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>2096304869@qq.com (ymyguang)</managingEditor>
            <webMaster>2096304869@qq.com (ymyguang)</webMaster><lastBuildDate>Wed, 24 Feb 2021 15:03:16 &#43;0800</lastBuildDate><atom:link href="https://blog-n3y5j0t56.vercel.app/tags/computer/" rel="self" type="application/rss+xml" /><item>
    <title>计算机网络</title>
    <link>https://blog-n3y5j0t56.vercel.app/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</link>
    <pubDate>Wed, 24 Feb 2021 15:03:16 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog-n3y5j0t56.vercel.app/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</guid>
    <description><![CDATA[计算机网络 绪论 应用层 常见协议：HTTP,FTP,POP3,SMTP 传输层–进程到进程之间 TCP，可靠传输；UDP 非可靠传输 网络层–端到端之间]]></description>
</item><item>
    <title>V2ray流量流通过程</title>
    <link>https://blog-n3y5j0t56.vercel.app/v2ray%E6%B5%81%E9%87%8F%E6%B5%81%E9%80%9A%E8%BF%87%E7%A8%8B/</link>
    <pubDate>Sat, 23 May 2020 15:03:16 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog-n3y5j0t56.vercel.app/v2ray%E6%B5%81%E9%87%8F%E6%B5%81%E9%80%9A%E8%BF%87%E7%A8%8B/</guid>
    <description><![CDATA[V2ray流量流通过程 代理方式为：全局模式，软件将所有的流量均通过V2ray，但是此时还没有传输到远端服务器 路由方式：全局模式，流经到软件的]]></description>
</item><item>
    <title>C&#43;&#43;中指针变量和变量指针</title>
    <link>https://blog-n3y5j0t56.vercel.app/%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F%E5%92%8C%E5%8F%98%E9%87%8F%E6%8C%87%E9%92%88/</link>
    <pubDate>Mon, 27 Apr 2020 15:03:16 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog-n3y5j0t56.vercel.app/%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F%E5%92%8C%E5%8F%98%E9%87%8F%E6%8C%87%E9%92%88/</guid>
    <description><![CDATA[指针变量和变量指针 读法规则 原则一：谁在前先读谁；const int a这里的a就是：常量（const）指针（)。同样：int * const p 这里的p就是指针（]]></description>
</item><item>
    <title>C&#43;&#43;中的数据转换</title>
    <link>https://blog-n3y5j0t56.vercel.app/c%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%8D%A2/</link>
    <pubDate>Wed, 04 Mar 2020 15:03:16 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog-n3y5j0t56.vercel.app/c%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%8D%A2/</guid>
    <description><![CDATA[数据转换 在做C语言题目的时候，有遇到了数据转换类型的题目。之前对这方面总是草草代过，今天终于给我了当头一棒。 现在对该数据类型转换总结整理一下]]></description>
</item><item>
    <title>思科—网络安全笔记</title>
    <link>https://blog-n3y5j0t56.vercel.app/%E6%80%9D%E7%A7%91%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%AC%94%E8%AE%B0/</link>
    <pubDate>Tue, 03 Mar 2020 15:03:16 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog-n3y5j0t56.vercel.app/%E6%80%9D%E7%A7%91%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%AC%94%E8%AE%B0/</guid>
    <description><![CDATA[思科—网络安全笔记 目录 [TOC] 漏洞 漏洞的分类 软件漏洞 硬件漏洞 1.缓冲器溢出：软件写数据的时候，超出数据区的边界 范围，导致访问到其他软件的内存数据，]]></description>
</item><item>
    <title>C&#43;&#43;相比C中的改进</title>
    <link>https://blog-n3y5j0t56.vercel.app/c-%E7%9B%B8%E6%AF%94c%E4%B8%AD%E7%9A%84%E6%94%B9%E8%BF%9B/</link>
    <pubDate>Tue, 04 Feb 2020 15:03:16 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog-n3y5j0t56.vercel.app/c-%E7%9B%B8%E6%AF%94c%E4%B8%AD%E7%9A%84%E6%94%B9%E8%BF%9B/</guid>
    <description><![CDATA[C++相比C中的改进 for循环 C++中的For循环变得更加简洁，对For进行了扩增，就像Python中的for一样； 1 2 3 4 5 6 7 8 int a[] = {1,3,4};]]></description>
</item></channel>
</rss>
